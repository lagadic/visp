name: Ubuntu-3rdparty

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SUN'

jobs:
  build-ubuntu-dep-apt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler: [ {CC: /usr/bin/gcc-10, CXX: /usr/bin/g++-10}, {CC: /usr/bin/clang, CXX: /usr/bin/clang++} ]

    steps:
    # https://github.com/marketplace/actions/cancel-workflow-action
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print system information
      run: lscpu

    - name: Print OS information
      run: lsb_release -a

    - name: Print compiler information
      run: dpkg --list | grep compiler

    - name: Install dependencies for ubuntu 18.04 and 20.04
      if: matrix.os != 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-22-dev libv4l-dev liblapack-dev libopenblas-dev libeigen3-dev libopencv-dev nlohmann-json3-dev

    - name: Install dependencies for ubuntu 22.04
      if: matrix.os == 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-dev libv4l-dev liblapack-dev libopenblas-dev libeigen3-dev libopencv-dev nlohmann-json3-dev

    - name: Clone camera_localization
      run: |
        git clone --depth 1 https://github.com/lagadic/camera_localization ${HOME}/camera_localization

    - name: Clone visp_started
      run: |
        git clone --depth 1 https://github.com/lagadic/visp_started ${HOME}/visp_started

    - name: Configure ViSP with cmake
      run: |
        mkdir build
        cd build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        echo "CC: $CC"
        echo "CXX: $CXX"
        cmake .. -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=OFF -DBUILD_DEMOS=OFF -DBUILD_TUTORIALS=OFF -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/tmp/usr/local
        cat ViSP-third-party.txt

    - name: Compile and install ViSP
      working-directory: build
      run: |
        make -j$(nproc) install

    - name: Build camera_localization with ViSP as 3rdparty
      run: |
        cd ${HOME}/camera_localization
        mkdir camera_localization-build
        cd camera_localization-build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        echo "CC: $CC"
        echo "CXX: $CXX"
        cmake ../ -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DVISP_DIR=/tmp/usr/local/lib/cmake/visp
        make -j$(nproc)

    - name: Build visp_started with ViSP as 3rdparty
      run: |
        cd ${HOME}/visp_started
        mkdir visp_started-build
        cd visp_started-build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        echo "CC: $CC"
        echo "CXX: $CXX"
        cmake ../ -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DVISP_DIR=/tmp/usr/local/lib/cmake/visp
        make -j$(nproc)
