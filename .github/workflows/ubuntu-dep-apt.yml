name: Ubuntu-dep-apt

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SUN'

jobs:
  build-ubuntu-dep-apt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler: [ {CC: /usr/bin/gcc-9, CXX: /usr/bin/g++-9}, {CC: /usr/bin/gcc-10, CXX: /usr/bin/g++-10}, {CC: /usr/bin/clang, CXX: /usr/bin/clang++} ]
        standard: [ 98, 11, 14, 17 ]

    steps:
    # https://github.com/marketplace/actions/cancel-workflow-action
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print system information
      run: lscpu

    - name: Print OS information
      run: lsb_release -a

    - name: Print compiler information
      run: dpkg --list | grep compiler

    - name: Install dependencies for ubuntu 18.04 and 20.04
      if: matrix.os != 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-22-dev libv4l-dev liblapack-dev libopenblas-dev libeigen3-dev libopencv-dev nlohmann-json3-dev

    - name: Install dependencies for ubuntu 22.04
      if: matrix.os == 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-dev libv4l-dev liblapack-dev libopenblas-dev libeigen3-dev libopencv-dev nlohmann-json3-dev

    - name: Clone visp-images
      env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      # https://remarkablemark.org/blog/2022/09/25/check-git-branch-exists-in-remote-repository/
      run: |
        git clone --depth 1 https://github.com/lagadic/visp-images ${HOME}/visp-images
        echo "VISP_INPUT_IMAGE_PATH=$HOME" >> $GITHUB_ENV
        echo ${VISP_INPUT_IMAGE_PATH}

    - name: Clone visp_sample
      run: |
        git clone --depth 1 https://github.com/lagadic/visp_sample ${HOME}/visp_sample

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        CXX_STANDARD=${{ matrix.standard }}
        echo "CC: $CC"
        echo "CXX: $CXX"
        echo "Standard: $CXX_STANDARD"
        cmake .. -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/tmp/usr/local -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CXX_STANDARD=$CXX_STANDARD
        cat ViSP-third-party.txt

    - name: Compile
      working-directory: build
      run: |
        make -j$(nproc) install

    - name: Run unit tests
      working-directory: build
      run: ctest -j$(nproc) --output-on-failure

    - name: ViSP as 3rdparty with cmake
      run: |
        cd ${HOME}/visp_sample
        mkdir visp_sample-build
        cd visp_sample-build
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        cmake .. -DCMAKE_C_COMPILER="${CC}" -DCMAKE_CXX_COMPILER="${CXX}" -DVISP_DIR=/tmp/usr/local/lib/cmake/visp -DCMAKE_VERBOSE_MAKEFILE=ON
        make -j$(nproc)

    - name: ViSP as 3rdparty with visp.pc and pkg-config
      run: |
        cd ${HOME}/visp_sample
        export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/tmp/usr/local/lib/pkgconfig
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        pkg-config --cflags visp
        pkg-config --libs visp
        make CXX=${{ matrix.compiler.CXX }} -j$(nproc) -f Makefile.visp.pc
        make CXX=${{ matrix.compiler.CXX }} -j$(nproc) -f Makefile.visp.pc clean

    - name: ViSP as 3rdparty with visp-config
      run: |
        cd ${HOME}/visp_sample
        export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/tmp/usr/local/lib/pkgconfig
        CC=${{ matrix.compiler.CC }}
        CXX=${{ matrix.compiler.CXX }}
        /tmp/usr/local/bin/visp-config --cflags
        /tmp/usr/local/bin/visp-config --libs
        make CXX=${{ matrix.compiler.CXX }} -j$(nproc) -f Makefile.visp-config
        make CXX=${{ matrix.compiler.CXX }} -j$(nproc) -f Makefile.visp-config clean
