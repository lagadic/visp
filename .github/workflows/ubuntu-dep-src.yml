name: Ubuntu-dep-src

# https://www.jeffgeerling.com/blog/2020/running-github-actions-workflow-on-schedule-and-other-events
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * SUN'

jobs:
  build-ubuntu-dep-src:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    steps:
    # https://github.com/marketplace/actions/cancel-workflow-action
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Print system information
      run: lscpu

    - name: Print OS information
      run: lsb_release -a

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y libx11-dev libdc1394-22-dev libv4l-dev gfortran liblapack-dev libeigen3-dev
        sudo apt-get update && sudo apt-get install -y libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Build OpenBLAS from source
      run: |
        pwd
        echo $GITHUB_WORKSPACE
        git clone --depth 1 https://github.com/xianyi/OpenBLAS.git ${HOME}/OpenBLAS
        cd ${HOME}/OpenBLAS
        mkdir install
        make -j$(nproc)
        make -j$(nproc) install PREFIX=$(pwd)/install
        echo "OpenBLAS_HOME=$(pwd)/install" >> $GITHUB_ENV
        echo $OpenBLAS_HOME

    - name: Build OpenCV from source
      run: |
        pwd
        git clone --depth 1 https://github.com/opencv/opencv.git ${HOME}/opencv
        cd ${HOME}/opencv
        mkdir build && cd build && mkdir install
        cmake .. -DBUILD_EXAMPLES=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(pwd)/install
        make -j$(nproc) install
        echo "OpenCV_DIR=$(pwd)/install" >> $GITHUB_ENV
        echo $OpenCV_DIR

    - name: Build librealsense2 from source
      run: |
        pwd
        git clone --depth 1 https://github.com/IntelRealSense/librealsense.git ${HOME}/librealsense
        cd ${HOME}/librealsense
        mkdir build && cd build && mkdir install
        cmake .. -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$(pwd)/install
        make -j$(nproc) install
        echo "REALSENSE2_DIR=$(pwd)/install" >> $GITHUB_ENV
        echo $REALSENSE2_DIR

    - name: Clone ViSP-images
      run: |
        git clone --depth 1 https://github.com/lagadic/ViSP-images ${HOME}/ViSP-images
        echo "VISP_INPUT_IMAGE_PATH=$HOME" >> $GITHUB_ENV
        echo ${VISP_INPUT_IMAGE_PATH}

    - name: Configure CMake
      run: |
        pwd
        mkdir build && cd build
        cmake ..
        cat ViSP-third-party.txt

    - name: Compile
      working-directory: build
      run: make -j$(nproc)

    - name: Run unit tests
      working-directory: build
      run: ctest -j$(nproc) --output-on-failure
