/*!

\mainpage ViSP @VISP_VERSION@ main page

\tableofcontents

\section intro_sec Introduction

<p>ViSP \cite Marchand05b is a modular C++ library that allows fast development of visual
servoing applications. ViSP is developed and maintained by the Inria
<a href="http://team.inria.fr/lagadic" target="_parent">Lagadic</a> team located at <a
href="http://www.inria.fr/en/centre/rennes" target="_parent">Inria Rennes</a>.</p>

<p>ViSP official site is <a href="https://visp.inria.fr" target="_parent">https://visp.inria.fr</a></p>

<p>ViSP wiki is <a href="https://github.com/lagadic/visp/wiki" target="_parent">https://github.com/lagadic/visp/wiki</a></p>

<p>ViSP source code available on GitHub <a href="https://github.com/lagadic/visp" target="_parent">https://github.com/lagadic/visp</a></p>

<p>If you have any problems or find any bugs, please report them in
<a href="https://github.com/lagadic/visp/issues">the bug tracker</a>. If you may need help, please use the available <a href="http://gforge.inria.fr/forum/?group_id=397" target="_parent">forums</a>.<p>

It is also possible to contact ViSP main developers using: <a href="mailto:visp@inria.fr?subject=[visp]">visp@inria.fr</a>

\section arch_sec Software architecture

Since ViSP 3.0.0, we design a new modular software architecture where ViSP capabilities are grouped in several modules (core, io, gui, vision, â€¦). In ViSP 3.1.0 we introduced a new module called imgproc. As a result, the user will find several shared or static libraries, one for each module. The following figure highlights the module dependencies and the third-party libraries that may be used by each module. The central module is the core module. All other modules depend on core.

\image html soft_archi_v6.png "ViSP modules and their optional dependencies"

\section download_sec Download

<p>From <a
href="https://visp.inria.fr/download" target="_parent">https://visp.inria.fr/download</a>
you can either download the latest stable release, a daily snapshot or the current
development distribution using git.</p>

\section install_sec Installation

<p>Because ViSP is a multi platform library that works under Linux, OSX
and Windows, to install ViSP you need the CMake configuration tool
available from <a
href="http://www.cmake.org" target="_parent">http://www.cmake.org</a>. Furthermore,
depending on your operation system and the capabilities (framegrabber,
display, simulation, ...) you need, prior to install ViSP you may
install third party libraries <a
href="https://visp.inria.fr/software-architecture" target="_parent">https://visp.inria.fr/software-architecture</a>.</p>

<p>ViSP full installation procedure using CMake is detailed in the \ref tuto_install_sdk "Installation from prebuild SDK tutorials" and \ref tuto_install_src "Installation from source tutorials". \ref tuto_started "Getting started tutorials" and documents in pdf are also available from <a
href="https://visp.inria.fr/publications" target="_parent">https://visp.inria.fr/publications</a>.</p>

\section tutorial Tutorials

<p>Here after you will find a list of tutorials that show the basic use of <a href="classes.html">ViSP classes</a> with a small first code.

\subsection tuto_ios ViSP iOS

- \ref tutorial-install-ios-package <br>In this tutorial you will learn how to install ViSP prebuilt framework for iOS devices.
- \ref tutorial-install-iOS <br>In this tutorial you will learn how to install ViSP from source on OSX for iOS project.
- \ref tutorial-getting-started-iOS <br>This tutorial shows how to build a project that uses ViSP on iOS devices.
- \ref tutorial-image-ios <br>This tutorial shows how to do simple image processing on iOS devices.
- \ref tutorial-detection-apriltag-ios <br>This tutorial shows how to do detct an AprilTag marker on iOS devices. 

\subsection tuto_java ViSP for Java

- \ref tutorial-install-java <br>In this tutorial you will learn how to install ViSP for Java under Linux, macOS or Windows.
- \ref tutorial-java-started <br>This tutorial explains how to create a Java application that uses some functionalities from ViSP core module.

\subsection tuto_install_sdk Installation from prebuild SDK

- \ref tutorial-install-ubuntu-package <br>In this first tutorial you will learn how to install ViSP prebuilt SDK from Ubuntu or Debian packages.
- \ref tutorial-install-archlinux-package <br>In this tutorial you will learn how to install ViSP prebuilt SDK for Arch Linux.
- \ref tutorial-install-osx-homebrew-package <br>In this tutorial you will learn how to install ViSP prebuilt SDK on OSX with Homebrew.
- \ref tutorial-install-ros-package <br>In this tutorial you will learn how to install ViSP prebuilt SDK for ROS.

\subsection tuto_install_src Installation from source

- \ref tutorial-install-ubuntu <br>In this tutorial you will learn how to install ViSP from source on Linux Ubuntu.
- \ref tutorial-install-fedora <br>In this other tutorial you will learn how to install ViSP from source on Linux Fedora.
- \ref tutorial-install-centos <br>In this other tutorial you will learn how to install ViSP from source on Linux CentOS.
- \ref tutorial-install-opensuse <br>In this other tutorial you will learn how to install ViSP from source on Linux openSUSE.
- \ref tutorial-install-raspberry <br>In this tutorial you will learn how to install ViSP from source on Raspberry Pi.
- \ref tutorial-install-jetson <br>In this tutorial you will learn how to install ViSP from source on Jetson equipped with a Connect Tech Orbitty Carrier board.
- \ref tutorial-install-win7 <br>In this tutorial you will learn how to install ViSP from source on Windows 7 with Visual C++ 2012 (vc11).
- \ref tutorial-install-win10-msvc12 <br>In this tutorial you will learn how to install ViSP from source on Windows 10 with Visual C++ 2013 (vc12).
- \ref tutorial-install-win10-msvc14 <br>In this tutorial you will learn how to install ViSP from source on Windows 10 with Visual C++ 2015 (vc14).
- \ref tutorial-install-win10-msvc15 <br>In this tutorial you will learn how to install ViSP from source on Windows 10 with Visual C++ 2017 (vc15).
- \ref tutorial-install-win10-mingw64 <br>In this tutorial you will learn how to install ViSP from source on Windows 8.1 or Windows 10 with Mingw-w64.
- \ref tutorial-install-win10-msvc14-uwp <br>In this tutorial you will learn how to install ViSP from source on Windows 10 for Universal Windows Platform apps with Visual C++ 2015 (vc14).
- \ref tutorial-install-win10-msvc15-uwp <br>In this tutorial you will learn how to install ViSP from source on Windows 10 for Universal Windows Platform apps with Visual C++ 2017 (vc15).
- \ref tutorial-install-osx-homebrew <br>In this tutorial you will learn how to install ViSP from source on OSX with Homebrew.


\subsection tuto_install_crosscompiling Installation from cross-compiling

- \ref tutorial-install-crosscompiling-raspberry <br>In this tutorial you will learn how to cross-compile ViSP on Ubuntu host for Raspberry Pi target.
- \ref tutorial-install-crosscompiling-naoqi <br>In this tutorial you will learn how to cross-compile ViSP on Ubuntu host for NAOqi targets (NAO, Romeo, Pepper).

\subsection tuto_started Getting started

- \ref tutorial-getting-started <br>This tutorial shows how to build a project that uses ViSP to read and display an image.
- \ref tutorial-getting-started-naoqi <br>This tutorial shows how to build a project that uses ViSP on NAOqi OS running on NAO, Romeo or Pepper humanoid robots.
- \ref tutorial-import-visp-into-EclipseIDE <br>This tutorial shows how to import a CMake project that uses ViSP in Eclipse IDE.
- \ref tutorial-contrib-module <br>This tutorial explains how to exploit ViSP modular architecture in order to introduce a new contrib module.

\subsection tuto_image Image manipulation

- \ref tutorial-image-display <br>In this tutorial you will learn how to display an image in a window and how to down scale the window size to be able to display images that are larger than the screen resolution.
- \ref tutorial-grabber <br>This tutorial shows how to acquire images from a camera.
- \ref tutorial-image-filtering <br>This tutorial shows how to filter an image with ViSP.
- \ref tutorial-simu-image <br>This tutorial shows how to project the image of a planar scene to a given camera position.

\subsection tuto_imgproc Image processing

- \ref tutorial-imgproc-brightness <br>This tutorial will show you some simple techniques to adjust or improve the brightness / contrast of an image.
- \ref tutorial-imgproc-contrast-sharpening <br>This tutorial will show you some simple techniques to improve the contrast and the sharpness of an image.
- \ref tutorial-imgproc-autothreshold <br>This tutorial will show you different methods to automatically threshold, binarize an image.
- \ref tutorial-imgproc-contour <br>This tutorial will show you how to extract the contours from a binary image.
- \ref tutorial-imgproc-connected-components <br>This tutorial will show you how to do a connected-components labeling.
- \ref tutorial-imgproc-flood-fill <br>This tutorial will show you how to use the flood fill algorithm.
- \ref tutorial-imgproc-count-coins <br>This tutorial will show you how to count the number of coins in an image.


\subsection tuto_calib Camera calibration

- \ref tutorial-calibration-intrinsic <br>This tutorial explains how to calibrate intrinsic camera parameters.
- \ref tutorial-calibration-extrinsic <br>This tutorial explains how to get the camera eye-in-hand extrinsic transformation when the camera is mounted on a robot end-effector.

\subsection tuto_tracking Tracking

- \ref tutorial-tracking-blob <br>This tutorial introduces blob tracking and detection.
- \ref tutorial-tracking-keypoint <br>This tutorial focuses on keypoint tracking using Kanade-Lucas-Tomasi feature tracker.
- \ref tutorial-tracking-me <br>This tutorial focuses on line and ellipse tracking using moving-edges.
- \ref tutorial-tracking-mb-generic <br>This tutorial focuses on model-based trackers using either edges, or keypoints, or a combination of them as visual features on images acquired by a monocular color camera.
- \ref tutorial-tracking-mb-generic-stereo <br>This tutorial focuses on model-based trackers using either edges, or keypoints, or a combination of them as visual features on images acquired by a stereo color camera.
- \ref tutorial-tracking-mb-generic-rgbd <br>This tutorial focuses on generic model-based trackers combining moving edges and/or keypoints with depth visual features.
- \ref tutorial-tracking-mb-generic-apriltag-live <br>This tutorial is a simple use case. Using a webcam or an Intel RGB-D camera it shows how to test the generic model tracker on a cube that has an AprilTag glued on one face. The tag is here used to automate the tracker initialization.
- \ref tutorial-tracking-mb-deprecated <br>This deprecated tutorial focuses on model-based trackers using either edges, keypoints or and hybrid scheme that uses edges and keypoints.
- \ref tutorial-tracking-mb-stereo-deprecated <br>This deprecated tutorial focuses on model-based trackers with stereo cameras.
- \ref tutorial-tracking-tt <br>This tutorial focuses on template trackers based on image registration approaches.

\subsection tuto_detection Detection

- \ref tutorial-matching <br>This tutorial shows how to detect and match keypoints.
- \ref tutorial-matching-deprecated <br>This tutorial shows how to detect and match SURF keypoints. It will be deprecated if you use an OpenCV version equal to 2.8.0 or a more recent version.
- \ref tutorial-detection-barcode <br>This tutorial focuses on bar code (QR code, Data Matrix code) detection.
- \ref tutorial-detection-face <br>This tutorial focuses on face detection thanks to OpenCV Haar cascade classifier.
- \ref tutorial-detection-object <br>This tutorial shows how to learn keypoints detected on a known object and how to use the matched correspondences to detect and estimate the pose of the object.
- \ref tutorial-detection-object-deprecated <br>This tutorial shows how to learn keypoints detected on a known object and how to use the matched correspondences to detect and estimate the pose of the object. We recommend to follow rather \ref tutorial-detection-object that uses vpMbGenericTracker class.
- \ref tutorial-detection-apriltag <br>This tutorial focuses on AprilTag patterns detection and pose estimation.

\subsection tuto_computer_vision Computer vision

- \ref tutorial-pose-estimation <br>This tutorial focuses on pose estimation from planar or non planar points.
- \ref tutorial-pose-estimation-qrcode <br>This tutorial focuses on pose estimation of a QRcode using it's four corners location.
- \ref tutorial-homography <br>Here we explain how to estimate an homography from couples of matched points.
- \ref tutorial-homography-deprecated <br>Here we explain how to estimate an homography from couples of matched points. It will be deprecated if you use an OpenCV version equal to 2.8.0 or a more recent version.

\subsection tuto_vs Visual servoing

- \ref tutorial-ibvs <br>This tutorial explains how to simulate an IBVS.
- \ref tutorial-simu-robot-pioneer <br>This tutorial focuses on visual servoing simulation on a unicycle robot. The study case is a Pioneer P3-DX mobile robot equipped with a camera.
- \ref tutorial-boost-vs <br>This tutorial explains how to speed up the time to convergence of a visual servo.
- \ref tutorial-franka-pbvs <br>This tutorial explains how to do a position-based visual-servoing with the Panda 7-dof robot from Franka Emika equipped with an Intel Realsense SR300 camera.
- \ref tutorial-mbot-vs <br>This tutorial explains how to do a visual-servoing with the mBot Ranger educational robot kit equipped with a Raspberry Pi and a camera.

\subsection tuto_bridge Bridges over other frameworks (OpenCV, MATLAB)

- \ref tutorial-bridge-opencv <br>This tutorial explicit how to convert OpenCV to/from ViSP structures such as camera parameters, images...
- \ref tutorial-visp-matlab <br>This tutorial shows how to invoke MATLAB functions from ViSP using MATLAB Engine.

\subsection tuto_tools Other tools

- \ref tutorial-plotter <br>This tutorial explains how to plot curves in real-time during a visual servo.
- \ref tutorial-trace <br>This tutorial explains how to introduce trace in the code that could be enabled for debugging or disabled.
- \ref tutorial-multi-threading <br>This tutorial explains how to implement multi-threaded applications to capture images from a camera
in one thread and display these images in an other thread.

@VISP_MAINPAGE_EXTENSION@

\section Examples_sec Using ViSP

<p>ViSP C++ classes are organized in <a href="modules.html">modules</a> that may help the user during his project implementation.</p>

<p>From the <a href="examples.html">example</a> page, you will also find
examples showing how to use the library to acquire and display an
image, compute a camera pose, estimate an homography, servo a real
robot or a simulated one using a 2D, 2D half or 3D visual servoing
scheme, ...</p>

\section Howto_sec How to help ?

<p>ViSP library is an open source C++ library which is developed at <a href="http://www.inria.fr/en/centre/rennes">Inria</a> by <a href="http://team.inria.fr/lagadic/welcome-eng.html">Lagadic team</a>. If you enjoy using ViSP, you may contribute to the project in different ways. This will motivate us to continue the efforts.

- You can submit a <a href="https://github.com/lagadic/visp/issues">bug report using the tracker</a>.
- You can submit patches or new functionalities using GitHub Pull Request mechanism.
- You can write new tutorials, new documentations or simply improve the existing documentation.
- If you just want to say you've been happy with the library, you can send us a postcard from your place, to the following address: <em>Inria Rennes Bretagne Atlantique, Lagadic team, Campus de Beaulieu, 35042 Rennes Cedex, FRANCE.</em>

<p>You can also ask for help using either <a href="https://gforge.inria.fr/forum/?group_id=397">the french or the english forum</a>.

*/


/*******************************************
 * Module core
 *******************************************/
/*!
  \defgroup module_core core: Core module
  Core module content.
*/
/*!
  \ingroup module_core
  \defgroup group_core_camera Camera model
  Camera model.
*/
/*!
  \ingroup module_core
  \defgroup group_core_image Image manipulation
  Image manipulation, including I/O from image files or videos.
*/
/*!
  \ingroup module_core
  \defgroup group_core_math Mathematics
  Mathematics.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_robust Robust estimation
  Robust estimation.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_random Random number generator
  Random number generator.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_matrices Matrices and vectors
  Matrices and vectors.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_transformations Tranformations
  Transformations.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_math_tools Other tools
  Other tools.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_math_spline Spline
  Spline.
*/
/*!
  \ingroup group_core_math
  \defgroup group_core_kalman Kalman filter
  Kalman filter.
*/
/*!
  \ingroup module_core
  \defgroup group_core_tools Tools
  Tools.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_moments Image moments
  Image moments.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_gui Generic GUI
  Generic graphical user interface tools.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_trackers Generic tracker
  Generic tracker tools.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_geometry 2D and 3D geometry
  2D and 3D geometry.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_bridges Bridges over other frameworks
  Conversion from/to OpenCV...
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_threading Multi threading
  Capabilities to execute multiple threads concurrently and protect shared data thanks to mutexes.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_debug Debug and exceptions
  Debug and exceptions.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_com Communication
  Networking.
*/
/*!
  \ingroup group_core_com
  \defgroup group_core_com_ethernet Ethernet
  Ethernet communication either using TCPIP or UDP protocol.
*/
/*!
  \ingroup group_core_com
  \defgroup group_core_com_serial Serial
  Serial communication.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_histogram Histogram
  Histogram.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_files_io Files and directories
  Files and directories.
*/
/*!
  \ingroup group_core_tools
  \defgroup group_core_time Time management
  Time management.
*/
/*!
\ingroup group_core_tools
\defgroup group_core_optim Optimization
  Optimization solvers for Linear Programs (simplex) and Quadratic Programs (active sets).
*/

/*******************************************
 * Module io
 *******************************************/
/*!
  \defgroup module_io io: I/O module
  I/O module content.
*/
/*!
  \ingroup module_io
  \defgroup group_io_image Image I/O
  Image reading and writing.
*/
/*!
  \ingroup module_io
  \defgroup group_io_video Video I/O
  Video reading and writing.
*/
/*!
  \ingroup module_io
  \defgroup group_io_keyboard Keyboard I/O
  Keyboard management.
*/
/*!
  \ingroup module_io
  \defgroup module_io_cmd_parser Command line parser I/O
  Command line parser.
*/
/*!
  \ingroup module_io
  \defgroup group_io_parallel_port Parallel port I/O
  Parallel port I/O.
*/

/*******************************************
 * Module visual_features
 *******************************************/
/*!
  \defgroup module_visual_features visual_features: Visual features module
  Visual features module content.
*/
/*!
  \ingroup module_visual_features
  \defgroup group_visual_features Visual features
  Visual features.
*/
/*!
  \ingroup module_visual_features
  \defgroup group_visual_features_builder Visual features builder
  Visual features builder.
*/

/*******************************************
 * Module gui
 *******************************************/
/*!
  \defgroup module_gui gui: Graphical user interface module
  Graphical user interface module content.
*/
/*!
  \ingroup module_gui
  \defgroup group_gui_display Display device
  Display device interface.
*/
/*!
  \ingroup module_gui
  \defgroup group_gui_plotter Drawing of 2D or 3D graphics
  Drawing of 2D or 3D graphics.
*/
/*!
  \ingroup module_gui
  \defgroup group_gui_projection Forward projection
  Forward projection interface.
*/


/*******************************************
 * Module ar
 *******************************************/
/*!
  \defgroup module_ar ar: Augmented reality module
  Augmented reality module content.
*/
/*!
  \ingroup module_ar
  \defgroup group_ar_renderer Renderer
  Renderer interfaces.
*/
/*!
  \ingroup module_ar
  \defgroup group_ar_simulator Simulator
  Simulator interfaces.
*/

/*******************************************
 * Module detection
 *******************************************/
/*!
  \defgroup module_detection detection: Detection module
  Detection module content.
*/
/*!
  \ingroup module_detection
  \defgroup group_detection_barcode Bar code detection
  Bar code detection.
*/
/*!
  \ingroup module_detection
  \defgroup group_detection_face Face detection
  Face detection.
*/
/*!
  \ingroup module_detection
  \defgroup group_detection_tag Tag detection
  Tag detection.
*/

/*******************************************
 * Module tracker
 *******************************************/
 /*!
   \defgroup module_tracker tracker: ViSP trackers
   ViSP trackers.
 */

/*******************************************
 * Module mbt
 *******************************************/
/*!
  \ingroup module_tracker
  \defgroup module_mbt mbt: Model-based tracker module
  Model-based tracker module content.
*/
/*!
  \ingroup module_mbt
  \defgroup group_mbt_trackers Trackers
  These are the classes that allow markerless model-based tracking.

  The only class that has to be used to design an application is the vpMbGenericTracker class. It allows:
  - to track an object observed by a single, a stereo camera or more cameras, a RGB-D camera
  - to consider moving-edges, keypoints or depth as visual features or a combination of these visual features.

  The following classes that allow to track an object on a single image continue to be maintained but should no more be used since we provide a more generic class with vpMbGenericTracker:
  - vpMbEdgeTracker
  - vpMbKltTracker
  - vpMbEdgeKltTracker

 The following classes that allow to track an object seen in two (stereo) or more images are deprecated and should no more be used. Use rather the vpMbGenericTracker class that can also handle multiple cameras:
  - vpMbEdgeMultiTracker
  - vpMbKltMultiTracker
  - vpMbEdgeKltMultiTracker.
*/
/*!
  \ingroup module_mbt
  \defgroup group_mbt_features Features
  Model-based trackers features.
*/
/*!
  \ingroup module_mbt
  \defgroup group_mbt_faces Faces management
  Faces management including visibility.
*/
/*!
  \ingroup module_mbt
  \defgroup group_mbt_xml_parser XML parsers
  XML parsers dedicated to model-based trackers.
*/
/*******************************************
 * Module robot
 *******************************************/
/*!
  \defgroup module_robot robot: Robot module
  Robot module content.
*/
/*!
  \ingroup module_robot
  \defgroup group_robot_real Real robots
  Real robots interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_gantry Gantry robot
  Afma6 gantry robot interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_cylindrical Cylindrical robot
  Afma4 cylindrical robot interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_unicycle Unicycle robot
  Pioneer P3DX unicycle robot interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_ptu Pan-tilt unit
  Pan-tilt unit interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_arm Anthropomorphic arm
  Anthropomorphic arm interfaces.
*/
/*!
  \ingroup group_robot_real
  \defgroup group_robot_real_template New robot interface (template)
  Template for users that want to integrate their own real-robot.
*/
/*!
  \ingroup module_robot
  \defgroup group_robot_haptic Haptic devices
  Haptic devices interfaces.
*/
/*!
  \ingroup module_robot
  \defgroup group_robot_simu Robot simulation
  Simulated robots interfaces.
*/
/*!
  \ingroup group_robot_simu
  \defgroup group_robot_simu_gantry Gantry robot simulation
  Gantry robot interfaces.
*/
/*!
  \ingroup group_robot_simu
  \defgroup group_robot_simu_arm Anthropomorphic arm simulation
  Anthropomorphic arm interfaces.
*/
/*!
  \ingroup group_robot_simu
  \defgroup group_robot_simu_unicycle Unicycle robot simulation
  Pioneer P3DX unicycle robot interfaces.
*/
/*!
  \ingroup group_robot_simu
  \defgroup group_robot_simu_camera Free flying camera simulation
  Free flying camera interfaces.
*/
/*!
  \ingroup module_robot
  \defgroup group_robot_image_simu Image simulation
  Image simulation.
*/

/*******************************************
 * Module sensor
 *******************************************/
/*!
  \defgroup module_sensor sensor: Sensor module
  Sensor module content. It provides bridges over drivers to acquire data from some sensors.
*/
/*!
  \ingroup module_sensor
  \defgroup group_sensor_laserscanner Laser scanner
  Laser scanner interfaces.
*/
/*!
  \ingroup module_sensor
  \defgroup group_sensor_camera Camera
  Camera interfaces.
*/
/*!
  \ingroup module_sensor
  \defgroup group_sensor_rgbd RGB-D sensor
  RGB-D sensor interfaces.
*/
/*!
  \ingroup module_sensor
  \defgroup group_sensor_ft Force/Torque sensor
  Force/Torque sensor interfaces.
*/
/*******************************************
 * Module tt
 *******************************************/
/*!
  \ingroup module_tracker
  \defgroup module_tt tt: Template tracker module
  Template tracker module content.
*/
/*!
  \ingroup module_tt
  \defgroup group_tt_tracker Trackers
  Classes dedicated to template tracking.
*/
/*!
  \ingroup module_tt
  \defgroup group_tt_warp Warping function
  Classes that implement warping functions that are estimated by the template trackers.
*/
/*!
  \ingroup module_tt
  \defgroup group_tt_tools Tools
  Tools used by template trackers.
*/
/*******************************************
 * Module tt_mi
 *******************************************/
 /*!
  \ingroup module_tracker
  \defgroup module_tt_mi tt_mi: Template tracker based on mutual information module
  Template tracker based on mutual information module content. This module is an
  extension of \ref module_tt where mutual information cost function is introduced.
*/
/*!
  \ingroup module_tt_mi
  \defgroup group_tt_mi_tracker Trackers
  Classes dedicates to template tracking with mutual information cost function.
*/
/*******************************************
 * Module me
 *******************************************/
 /*!
  \ingroup module_tracker
  \defgroup module_me me: Moving-edges tracker module
  Moving-edges tracker module.
*/
/*******************************************
 * Module blob
 *******************************************/
 /*!
  \ingroup module_tracker
  \defgroup module_blob blob: Blob tracker module
  Blob tracker module.
*/
/*******************************************
 * Module klt
 *******************************************/
 /*!
  \ingroup module_tracker
  \defgroup module_klt klt: Kanade Lucas tracker module
  Kanade Lucas tracker module.
*/
/*******************************************
 * Module vision
 *******************************************/
 /*!
  \defgroup module_vision vision: Computer vision module
  Computer vision module content.
*/
/*!
  \ingroup module_vision
  \defgroup group_vision_calib Camera calibration
  Camera calibration algorithms.
*/
/*!
  \ingroup module_vision
  \defgroup group_vision_homography Homography estimation
  Homography estimation algorithms.
*/
/*!
  \ingroup module_vision
  \defgroup group_vision_pose Pose estimation
  Pose estimation algorithms.
*/
/*!
  \ingroup module_vision
  \defgroup group_vision_keypoints Keypoints detection, matching and classifiers
  Keypoints detection and matching algorithms but also classifiers.
*/
/*******************************************
 * Module vs
 *******************************************/
 /*!
  \defgroup module_vs vs: Visual servoing module
  Visual servoing module content.
*/
/*!
  \ingroup module_vs
  \defgroup group_task Task and control laws
  Classes used to define task and control laws.
*/
