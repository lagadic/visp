#
# python_example documentation build configuration file, created by
# sphinx-quickstart on Fri Feb 26 00:29:33 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
import sys
import os
from datetime import date

# In some cases, Sphinx (e.g. the autosummary module) does not detect our module without this import
import visp

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.autosummary",
    "sphinx.ext.doctest",
    "sphinx_immaterial",
    "sphinx_design"
]

# python_apigen_modules = {
#   "visp.core": "generated/core.",
#   "visp.vs": "generated/vs.",
# }
# python_apigen_default_groups = [
#     (r".*:visp.core.*", "Core Public-members"),
#     (r"class:visp.core.*", "Core Classes"),
#     (r".*:visp.vs.*", "VS Public-members"),
#     (r"class:visp.vs.*", "VS Classes"),
# ]

# python_apigen_default_order = [
#     (r".*:visp.core.*", -1),
#     (r"class:visp.core.*", -2),
#     (r".*:visp.vs.*", -1),
#     (r"class:visp.vs.*", -2),
# ]
autosummary_generate = True

autoclass_content = "both"  # Add __init__ doc (ie. params) to class summaries
html_show_sourcelink = False  # Remove 'view source code' from top of page (for html, not python)
autodoc_inherit_docstrings = True  # If no docstring, inherit from base class
set_type_checking_flag = True  # Enable 'expensive' imports for sphinx_autodoc_typehints
nbsphinx_allow_errors = True  # Continue through Jupyter errors

autodoc_typehints = "both" # Sphinx-native method. Not as good as sphinx_autodoc_typehints
add_module_names = False # Remove namespaces from class/method signatures


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "visp"
copyright = "2023, Inria"
author = "Samuel Felton"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = "@VISP_PYTHON_VERSION@"
# The full version, including alpha/beta/rc tags.
release = "@VISP_PYTHON_VERSION@"

BUILD_DAILY_DOC = os.getenv('BUILD_DAILY_DOC')
if BUILD_DAILY_DOC != None:
  print("Create doc for daily build")
  today = date.today()
  release = "@VISP_PYTHON_VERSION@ under development (" + str(today) + ")"
else:
  print("Create doc for release")

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build", "_templates"]

# The reST default role (used for this markup: `text`) to use for all
# documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'sphinx_immaterial'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {}
html_theme_options = {
    "toc_title_is_page_title": True,
    "font": False,
    "repo_url": "https://github.com/lagadic/visp",
    "repo_name": "visp",
    "features": [
      "toc.follow",
      "toc.sticky",
      "navigation.instant"
    ],
    "globaltoc_collapse": False,
    "palette": [
        {
            "media": "(prefers-color-scheme: light)",
            "scheme": "default",
            "toggle": {
                "icon": "material/toggle-switch-off-outline",
                "name": "Switch to dark mode",
            },
            "primary": "red",
            "accent": "indigo"
        },
        {
            "media": "(prefers-color-scheme: dark)",
            "scheme": "slate",
            "toggle": {
                "icon": "material/toggle-switch",
                "name": "Switch to light mode",
            },
            "primary": "red",
            "accent": "indigo"
        },
    ]
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = 'ViSP documentation'

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
# html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
# html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = "vispdoc"

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #'preamble': '',
    # Latex figure (float) alignment
    #'figure_align': 'htbp',
}
rst_prolog = """
.. role:: python(code)
    :language: python
    :class: highlight
"""
html_logo = '_static/visp_icon_white.png'
html_favicon = '_static/visp_icon.png'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "visp.tex",
        "visp Documentation",
        "Samuel Felton",
        "manual",
    ),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, "visp", "ViSP Documentation", [author], 1)
]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "visp",
        "ViSP Documentation",
        author,
        "visp",
        "Python binding for ViSP",
        "Miscellaneous",
    ),
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {"python": ("https://docs.python.org/", None)}

from sphinx.util.logging import WarningLogRecordTranslator, WarningStreamHandler

# Filter warning about Parameter names not matching function signature
# This is somethiing that is due to pybind overloads, so we cannot do anything about it
class FilterPybindArgWarnings(WarningLogRecordTranslator):
  def filter(self, record):
    if 'Parameter name' in record.msg and 'does not match any of the parameters' in record.msg:
      return False
    return super(FilterPybindArgWarnings, self).filter(record)

# Filter warning about duplicate objects
class FilterNoIndexWarnings(WarningLogRecordTranslator):
  def filter(self, record):
    if 'use :no-index: for' in record.msg:
      return False
    return super(FilterNoIndexWarnings, self).filter(record)


object_description_options = [
  ("py:.*", dict(include_fields_in_toc=False)),
]

python_type_aliases = {
  "_visp.": "visp.",
  "visp._visp.": "visp."
}
autodoc_type_aliases = python_type_aliases

autodoc_excludes = [
'__weakref__',  '__doc__', '__module__', '__dict__', '__annotations__',
'__dir__', '__delattr__', '__format__', '__init_subclass__', '__new__',
'__reduce__', '__reduce_ex__', '__repr__', '__setattr__',
'__sizeof__', '__str__', '__subclasshook__', '__getattribute__', '__entries',
]

autodoc_default_options = {
  'exclude-members': ','.join(autodoc_excludes)
}

def autodoc_skip_member(app, what, name, obj, skip, options):
  # Ref: https://stackoverflow.com/a/21449475/

  exclude = name in autodoc_excludes
  # return True if (skip or exclude) else None  # Can interfere with subsequent skip functions.
  return True if exclude else skip

def setup(app):
  import logging
  from sphinx.util.logging import NAMESPACE
  logger = logging.getLogger(NAMESPACE)
  for handler in logger.handlers:
    if isinstance(handler, WarningStreamHandler):
      handler.addFilter(FilterPybindArgWarnings(app))
      handler.addFilter(FilterNoIndexWarnings(app))

  app.connect('autodoc-skip-member', autodoc_skip_member)
