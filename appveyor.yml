# Specify version format
version: "3.2.0-{build}"

image:
  - Visual Studio 2017

# to add several platforms to build matrix
platform:
  - x64

configuration:
  - Release

environment:
  VISP_OPENCV_MINGW_FILE: opencv-4.1.0-MinGW-build-package.7z
  VISP_OPENCV_MINGW_DIR: opencv-4.1.0-MinGW-build-package
  VISP_OPENCV_MINGW_PKG: https://github.com/lagadic/visp-dependencies/blob/master/opencv-4.1.0-MinGW-x86_64-7.3.0-release-posix-seh-rt_v5-rev0-build-package.7z?raw=true
  VISP_OPENCV_VS2015_2017_FILE: opencv-4.1.0-vc14_vc15.exe
  VISP_OPENCV_VS2015_2017_DIR: opencv-4.1.0-vc14_vc15
  VISP_OPENCV_VS2015_2017_PKG: https://github.com/opencv/opencv/releases/download/4.1.0/opencv-4.1.0-vc14_vc15.exe

  matrix:
    - CMAKE_GENERATOR: MinGW Makefiles
      BUILD_NAME: mingw

    - CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      BUILD_NAME: vs2017

# Scripts that are called at very beginning, before repo cloning
init:
  - cmake --version
  - msbuild /version

install:
  # Create temp dir to collect test outputs
  - md C:\temp

  # All external dependencies are installed in C:\projects\deps
  - mkdir C:\projects\deps
  - cd C:\projects\deps

  # visp-images
  - git clone --depth 1 https://github.com/lagadic/visp-images
  - set VISP_INPUT_IMAGE_PATH=C:\projects\deps\visp-images

  # opencv
  - ps: >-
      if (${env:CMAKE_GENERATOR} -imatch "Visual Studio 15 2017 Win64" -and !(Test-Path ${env:VISP_OPENCV_VS2015_2017_FILE})) {
        echo "Downloading OpenCV Visual Studio from ${env:VISP_OPENCV_VS2015_2017_PKG} ..."
        appveyor DownloadFile "${env:VISP_OPENCV_VS2015_2017_PKG}" -FileName ${env:VISP_OPENCV_VS2015_2017_FILE} -Timeout 1200000
      }

  - ps: >-
      if (${env:CMAKE_GENERATOR} -imatch "Visual Studio 15 2017 Win64") {
        echo "Extracting OpenCV Visual Studio to C:\projects\deps ..."
        7z x ${env:VISP_OPENCV_VS2015_2017_FILE} -y "-o${env:VISP_OPENCV_VS2015_2017_DIR}"
      }

  - ps: >-
      if (${env:CMAKE_GENERATOR} -imatch "MinGW Makefiles" -and !(Test-Path ${env:VISP_OPENCV_MINGW_FILE})) {
        echo "Downloading OpenCV MinGW from ${env:VISP_OPENCV_MINGW_PKG} ..."
        appveyor DownloadFile "${env:VISP_OPENCV_MINGW_PKG}" -FileName ${env:VISP_OPENCV_MINGW_FILE} -Timeout 1200000
      }

  - ps: >-
      if (${env:CMAKE_GENERATOR} -imatch "MinGW Makefiles") {
        echo "Extracting OpenCV MinGW to C:\projects\deps ..."
        7z x ${env:VISP_OPENCV_MINGW_FILE} -y "-o${env:VISP_OPENCV_MINGW_DIR}"
      }

cache:
  - opencv-4.1.0-MinGW-build-package.7z -> appveyor.yml
  - opencv-4.1.0-vc14_vc15.exe -> appveyor.yml

# visp clone directory
clone_folder: C:\projects\visp\visp

before_build:
  # Use MinGW-w64 in C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set MINGW_DIR=C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set PATH=C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin;%PATH%
  - dir C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" mingw32-make --version
  # Setup ViSP
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" set VISP_DLL_DIR=C:\projects\visp\build\install\%platform%\vc15\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set VISP_DLL_DIR=C:\projects\visp\build\install\%platform%\mingw\bin
  - SET PATH=%VISP_DLL_DIR%;%PATH%
  # Setup OpenCV
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" set OpenCV_DIR=C:\projects\deps\%VISP_OPENCV_VS2015_2017_DIR%\opencv\build
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" set OpenCV_DLL_DIR=%OpenCV_DIR%\%platform%\vc15\bin
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set OpenCV_DIR=C:\projects\deps\%VISP_OPENCV_MINGW_DIR%\install
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" set OpenCV_DLL_DIR=%OpenCV_DIR%\x64\mingw\bin
  - set PATH=%OPENCV_DLL_DIR%;%PATH%

build_script:
  - echo %PATH%
  - dir C:\projects\deps
  - dir C:\tools
  - dir %OpenCV_DLL_DIR%
  - md C:\projects\visp\build
  - cd C:\projects\visp\build
  - cmake -G "%CMAKE_GENERATOR%" -DCMAKE_BUILD_TYPE=%configuration% ..\visp
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" cmake --build . --config %configuration% --target install -- /m:2
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" cmake --build . --config %configuration% --target install -- -j2
  - dir C:\projects\visp\build\install
  - dir %VISP_DLL_DIR%
  - if "%CMAKE_GENERATOR%"=="Visual Studio 15 2017 Win64" ctest --output-on-failure
  - if "%CMAKE_GENERATOR%"=="MinGW Makefiles" ctest --output-on-failure